Index: quilted/Python/bltinmodule.c
===================================================================
--- quilted.orig/Python/bltinmodule.c	2008-09-04 16:48:29.000000000 +0100
+++ quilted/Python/bltinmodule.c	2008-09-04 16:48:59.000000000 +0100
@@ -2230,7 +2230,7 @@
 in length to the length of the shortest argument sequence.");
 
 
-static PyMethodDef builtin_methods[] = {
+static const PyMethodDef builtin_methods[] = {
  	{"__import__",	(PyCFunction)builtin___import__, METH_VARARGS | METH_KEYWORDS, import_doc},
  	{"abs",		builtin_abs,        METH_O, abs_doc},
  	{"all",		builtin_all,        METH_O, all_doc},
Index: quilted/Modules/gcmodule.c
===================================================================
--- quilted.orig/Modules/gcmodule.c	2008-09-04 17:30:56.000000000 +0100
+++ quilted/Modules/gcmodule.c	2008-09-04 17:31:05.000000000 +0100
@@ -1188,7 +1188,7 @@
 "get_referrers() -- Return the list of objects that refer to an object.\n"
 "get_referents() -- Return the list of objects that an object refers to.\n");
 
-static PyMethodDef GcMethods[] = {
+static const PyMethodDef GcMethods[] = {
 	{"enable",	   gc_enable,	  METH_NOARGS,  gc_enable__doc__},
 	{"disable",	   gc_disable,	  METH_NOARGS,  gc_disable__doc__},
 	{"isenabled",	   gc_isenabled,  METH_NOARGS,  gc_isenabled__doc__},
Index: quilted/Objects/codeobject.c
===================================================================
--- quilted.orig/Objects/codeobject.c	2008-09-04 17:29:18.000000000 +0100
+++ quilted/Objects/codeobject.c	2008-09-04 17:29:27.000000000 +0100
@@ -110,7 +110,7 @@
 
 #define OFF(x) offsetof(PyCodeObject, x)
 
-static PyMemberDef code_memberlist[] = {
+static const PyMemberDef code_memberlist[] = {
 	{"co_argcount",	T_INT,		OFF(co_argcount),	READONLY},
 	{"co_nlocals",	T_INT,		OFF(co_nlocals),	READONLY},
 	{"co_stacksize",T_INT,		OFF(co_stacksize),	READONLY},
Index: quilted/Objects/dictobject.c
===================================================================
--- quilted.orig/Objects/dictobject.c	2008-09-04 17:30:18.000000000 +0100
+++ quilted/Objects/dictobject.c	2008-09-04 17:30:24.000000000 +0100
@@ -1981,7 +1981,7 @@
 PyDoc_STRVAR(iteritems__doc__,
 "D.iteritems() -> an iterator over the (key, value) items of D");
 
-static PyMethodDef mapp_methods[] = {
+static const PyMethodDef mapp_methods[] = {
 	{"__contains__",(PyCFunction)dict_has_key,      METH_O | METH_COEXIST,
 	 contains__doc__},
 	{"__getitem__", (PyCFunction)dict_subscript,	METH_O | METH_COEXIST,
Index: quilted/Objects/fileobject.c
===================================================================
--- quilted.orig/Objects/fileobject.c	2008-09-04 17:30:32.000000000 +0100
+++ quilted/Objects/fileobject.c	2008-09-04 17:30:42.000000000 +0100
@@ -1749,7 +1749,7 @@
 PyDoc_STRVAR(exit_doc,
 	     "__exit__(*excinfo) -> None.  Closes the file.");
 
-static PyMethodDef file_methods[] = {
+static const PyMethodDef file_methods[] = {
 	{"readline",  (PyCFunction)file_readline, METH_VARARGS, readline_doc},
 	{"read",      (PyCFunction)file_read,     METH_VARARGS, read_doc},
 	{"write",     (PyCFunction)file_write,    METH_VARARGS, write_doc},
Index: quilted/Objects/setobject.c
===================================================================
--- quilted.orig/Objects/setobject.c	2008-09-04 17:28:50.000000000 +0100
+++ quilted/Objects/setobject.c	2008-09-04 17:28:58.000000000 +0100
@@ -1835,7 +1835,7 @@
 All is well if assertions don't fail.");
 #endif
 
-static PyMethodDef set_methods[] = {
+static const PyMethodDef set_methods[] = {
 	{"add",		(PyCFunction)set_add,		METH_O,
 	 add_doc},
 	{"clear",	(PyCFunction)set_clear,		METH_NOARGS,
Index: quilted/Objects/stringobject.c
===================================================================
--- quilted.orig/Objects/stringobject.c	2008-09-04 17:28:01.000000000 +0100
+++ quilted/Objects/stringobject.c	2008-09-04 17:28:20.000000000 +0100
@@ -3841,7 +3841,7 @@
 }
 
 
-static PyMethodDef
+static const PyMethodDef
 string_methods[] = {
 	/* Counterparts of the obsolete stropmodule functions; except
 	   string.maketrans(). */
Index: quilted/Objects/unicodeobject.c
===================================================================
--- quilted.orig/Objects/unicodeobject.c	2008-09-04 17:27:22.000000000 +0100
+++ quilted/Objects/unicodeobject.c	2008-09-04 17:27:29.000000000 +0100
@@ -7009,7 +7009,7 @@
 }
 
 
-static PyMethodDef unicode_methods[] = {
+static const PyMethodDef unicode_methods[] = {
 
     /* Order is according to common usage: often used methods should
        appear first, since lookup is done sequentially. */
Index: quilted/Python/import.c
===================================================================
--- quilted.orig/Python/import.c	2008-09-04 17:29:52.000000000 +0100
+++ quilted/Python/import.c	2008-09-04 17:30:02.000000000 +0100
@@ -2933,7 +2933,7 @@
 Release the interpreter's import lock.\n\
 On platforms without threads, this function does nothing.");
 
-static PyMethodDef imp_methods[] = {
+static const PyMethodDef imp_methods[] = {
 	{"find_module",	 imp_find_module,  METH_VARARGS, doc_find_module},
 	{"get_magic",	 imp_get_magic,	   METH_NOARGS,  doc_get_magic},
 	{"get_suffixes", imp_get_suffixes, METH_NOARGS,  doc_get_suffixes},
Index: quilted/Python/sysmodule.c
===================================================================
--- quilted.orig/Python/sysmodule.c	2008-09-04 17:28:34.000000000 +0100
+++ quilted/Python/sysmodule.c	2008-09-04 17:28:42.000000000 +0100
@@ -733,7 +733,7 @@
 }
 #endif
 
-static PyMethodDef sys_methods[] = {
+static const PyMethodDef sys_methods[] = {
 	/* Might as well keep this in alphabetic order */
 	{"callstats", (PyCFunction)PyEval_GetCallStats, METH_NOARGS,
 	 callstats_doc},
