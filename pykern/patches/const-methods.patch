Index: quilted/Include/methodobject.h
===================================================================
--- quilted.orig/Include/methodobject.h	2008-09-04 16:54:38.000000000 +0100
+++ quilted/Include/methodobject.h	2008-09-04 16:56:25.000000000 +0100
@@ -46,7 +46,7 @@
 PyAPI_FUNC(PyObject *) Py_FindMethod(PyMethodDef[], PyObject *, const char *);
 
 #define PyCFunction_New(ML, SELF) PyCFunction_NewEx((ML), (SELF), NULL)
-PyAPI_FUNC(PyObject *) PyCFunction_NewEx(PyMethodDef *, PyObject *, 
+PyAPI_FUNC(PyObject *) PyCFunction_NewEx(const PyMethodDef *, PyObject *, 
 					 PyObject *);
 
 /* Flag passed to newmethodobject */
@@ -80,7 +80,7 @@
 
 typedef struct {
     PyObject_HEAD
-    PyMethodDef *m_ml; /* Description of the C function to call */
+    const PyMethodDef *m_ml; /* Description of the C function to call */
     PyObject    *m_self; /* Passed as 'self' arg to the C func, can be NULL */
     PyObject    *m_module; /* The __module__ attribute, can be anything */
 } PyCFunctionObject;
Index: quilted/Include/modsupport.h
===================================================================
--- quilted.orig/Include/modsupport.h	2008-09-04 16:49:31.000000000 +0100
+++ quilted/Include/modsupport.h	2008-09-04 16:50:36.000000000 +0100
@@ -113,7 +113,8 @@
  #endif
 #endif
 
-PyAPI_FUNC(PyObject *) Py_InitModule4(const char *name, PyMethodDef *methods,
+PyAPI_FUNC(PyObject *) Py_InitModule4(const char *name,
+                                      const PyMethodDef *methods,
                                       const char *doc, PyObject *self,
                                       int apiver);
 
Index: quilted/Objects/methodobject.c
===================================================================
--- quilted.orig/Objects/methodobject.c	2008-09-04 16:55:05.000000000 +0100
+++ quilted/Objects/methodobject.c	2008-09-04 16:55:37.000000000 +0100
@@ -7,7 +7,7 @@
 static PyCFunctionObject *free_list = NULL;
 
 PyObject *
-PyCFunction_NewEx(PyMethodDef *ml, PyObject *self, PyObject *module)
+PyCFunction_NewEx(const PyMethodDef *ml, PyObject *self, PyObject *module)
 {
 	PyCFunctionObject *op;
 	op = free_list;
Index: quilted/Python/modsupport.c
===================================================================
--- quilted.orig/Python/modsupport.c	2008-09-04 16:50:44.000000000 +0100
+++ quilted/Python/modsupport.c	2008-09-04 16:54:12.000000000 +0100
@@ -29,11 +29,11 @@
  This Python has API version %d, module %.100s has version %d.";
 
 PyObject *
-Py_InitModule4(const char *name, PyMethodDef *methods, const char *doc,
+Py_InitModule4(const char *name, const PyMethodDef *methods, const char *doc,
 	       PyObject *passthrough, int module_api_version)
 {
 	PyObject *m, *d, *v, *n;
-	PyMethodDef *ml;
+	const PyMethodDef *ml;
 	if (!Py_IsInitialized())
 	    Py_FatalError("Interpreter not initialized (version mismatch?)");
 	if (module_api_version != PYTHON_API_VERSION) {
Index: quilted/Include/descrobject.h
===================================================================
--- quilted.orig/Include/descrobject.h	2008-09-04 17:37:22.000000000 +0100
+++ quilted/Include/descrobject.h	2008-09-04 17:40:21.000000000 +0100
@@ -48,12 +48,12 @@
 
 typedef struct {
 	PyDescr_COMMON;
-	PyMethodDef *d_method;
+	const PyMethodDef *d_method;
 } PyMethodDescrObject;
 
 typedef struct {
 	PyDescr_COMMON;
-	struct PyMemberDef *d_member;
+	const struct PyMemberDef *d_member;
 } PyMemberDescrObject;
 
 typedef struct {
@@ -69,10 +69,11 @@
 
 PyAPI_DATA(PyTypeObject) PyWrapperDescr_Type;
 
-PyAPI_FUNC(PyObject *) PyDescr_NewMethod(PyTypeObject *, PyMethodDef *);
-PyAPI_FUNC(PyObject *) PyDescr_NewClassMethod(PyTypeObject *, PyMethodDef *);
+PyAPI_FUNC(PyObject *) PyDescr_NewMethod(PyTypeObject *, const PyMethodDef *);
+PyAPI_FUNC(PyObject *) PyDescr_NewClassMethod(PyTypeObject *,
+					       const PyMethodDef *);
 PyAPI_FUNC(PyObject *) PyDescr_NewMember(PyTypeObject *,
-					       struct PyMemberDef *);
+					       const struct PyMemberDef *);
 PyAPI_FUNC(PyObject *) PyDescr_NewGetSet(PyTypeObject *,
 					       struct PyGetSetDef *);
 PyAPI_FUNC(PyObject *) PyDescr_NewWrapper(PyTypeObject *,
Index: quilted/Include/object.h
===================================================================
--- quilted.orig/Include/object.h	2008-09-04 17:33:50.000000000 +0100
+++ quilted/Include/object.h	2008-09-04 17:34:28.000000000 +0100
@@ -314,8 +314,8 @@
 	iternextfunc tp_iternext;
 
 	/* Attribute descriptor and subclassing stuff */
-	struct PyMethodDef *tp_methods;
-	struct PyMemberDef *tp_members;
+	const struct PyMethodDef *tp_methods;
+	const struct PyMemberDef *tp_members;
 	struct PyGetSetDef *tp_getset;
 	struct _typeobject *tp_base;
 	PyObject *tp_dict;
Index: quilted/Include/structmember.h
===================================================================
--- quilted.orig/Include/structmember.h	2008-09-04 17:41:20.000000000 +0100
+++ quilted/Include/structmember.h	2008-09-04 17:41:38.000000000 +0100
@@ -83,8 +83,8 @@
 PyAPI_FUNC(int) PyMember_Set(char *, struct memberlist *, const char *, PyObject *);
 
 /* Current API, use this */
-PyAPI_FUNC(PyObject *) PyMember_GetOne(const char *, struct PyMemberDef *);
-PyAPI_FUNC(int) PyMember_SetOne(char *, struct PyMemberDef *, PyObject *);
+PyAPI_FUNC(PyObject *) PyMember_GetOne(const char *, const struct PyMemberDef *);
+PyAPI_FUNC(int) PyMember_SetOne(char *, const struct PyMemberDef *, PyObject *);
 
 
 #ifdef __cplusplus
Index: quilted/Objects/descrobject.c
===================================================================
--- quilted.orig/Objects/descrobject.c	2008-09-04 17:31:21.000000000 +0100
+++ quilted/Objects/descrobject.c	2008-09-04 17:39:53.000000000 +0100
@@ -591,7 +591,7 @@
 }
 
 PyObject *
-PyDescr_NewMethod(PyTypeObject *type, PyMethodDef *method)
+PyDescr_NewMethod(PyTypeObject *type, const PyMethodDef *method)
 {
 	PyMethodDescrObject *descr;
 
@@ -603,7 +603,7 @@
 }
 
 PyObject *
-PyDescr_NewClassMethod(PyTypeObject *type, PyMethodDef *method)
+PyDescr_NewClassMethod(PyTypeObject *type, const PyMethodDef *method)
 {
 	PyMethodDescrObject *descr;
 
@@ -615,7 +615,7 @@
 }
 
 PyObject *
-PyDescr_NewMember(PyTypeObject *type, PyMemberDef *member)
+PyDescr_NewMember(PyTypeObject *type, const PyMemberDef *member)
 {
 	PyMemberDescrObject *descr;
 
Index: quilted/Objects/typeobject.c
===================================================================
--- quilted.orig/Objects/typeobject.c	2008-09-04 17:36:05.000000000 +0100
+++ quilted/Objects/typeobject.c	2008-09-04 17:36:39.000000000 +0100
@@ -2931,7 +2931,7 @@
 /* Initialize the __dict__ in a type object */
 
 static int
-add_methods(PyTypeObject *type, PyMethodDef *meth)
+add_methods(PyTypeObject *type, const PyMethodDef *meth)
 {
 	PyObject *dict = type->tp_dict;
 
@@ -2968,7 +2968,7 @@
 }
 
 static int
-add_members(PyTypeObject *type, PyMemberDef *memb)
+add_members(PyTypeObject *type, const PyMemberDef *memb)
 {
 	PyObject *dict = type->tp_dict;
 
Index: quilted/Python/structmember.c
===================================================================
--- quilted.orig/Python/structmember.c	2008-09-04 17:41:54.000000000 +0100
+++ quilted/Python/structmember.c	2008-09-04 17:42:16.000000000 +0100
@@ -51,7 +51,7 @@
 }
 
 PyObject *
-PyMember_GetOne(const char *addr, PyMemberDef *l)
+PyMember_GetOne(const char *addr, const PyMemberDef *l)
 {
 	PyObject *v;
 	if ((l->flags & READ_RESTRICTED) &&
@@ -154,7 +154,7 @@
 }
 
 int
-PyMember_SetOne(char *addr, PyMemberDef *l, PyObject *v)
+PyMember_SetOne(char *addr, const PyMemberDef *l, PyObject *v)
 {
 	PyObject *oldv;
 
